name: Create new release

on:
  workflow_dispatch:
    inputs:
      version:
        description: Release version
        required: true
      draft:
        description: True to create a draft (unpublished) release
        default: 'false'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: master
        fetch-depth: 0
        persist-credentials: false

    - name: Create release
      uses: actions/github-script@v3
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        version: ${{github.event.inputs.version}}
        draft: ${{github.event.inputs.draft}}
        script: |
          const regex = new RegExp('^([0-9]+\.){0,2}([0-9]+)$');

          try {
            const { owner, repo } = context.repo;
            core.info(`Identified repository ${owner}/${repo}`);

            const version = core.getInput('version', { required: true });
            if (!regex.test(version)) {
              throw new Error(`${version} is not a valid versionning`);
            }
            core.info(`Creating release ${version}`);

            const draft = core.getInput('draft', { required: true }).toLowerCase() === 'true';
            core.info(`Draft mode : ${draft}`);

            const res = await github.repos.createRelease({
              owner,
              repo,
              prerelease: false,
              draft: draft,
              name: version,
              tag_name: version,
              body: 'WIP',
            });
            core.info(JSON.stringify(res));
          } catch (error) {
            core.setFailed(error.message);
          }
